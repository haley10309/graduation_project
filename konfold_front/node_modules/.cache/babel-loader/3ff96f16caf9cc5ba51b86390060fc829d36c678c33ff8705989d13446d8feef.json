{"ast":null,"code":"var _jsxFileName = \"P:\\\\konfold\\\\Github\\\\graduation_project\\\\konfold_front\\\\src\\\\pages\\\\AlphaOutput.jsx\";\nimport React, { useState } from \"react\";\nimport * as $3Dmol from '3dmol/build/3Dmol.js';\nimport $ from 'jquery';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AlphaOutput() {\n  //css 할 변수\n  const Wrap = styled.div`\n    display: flex;\n    flex-direction: row;\n    background: #f7f7f7 ;\n    max-width: 80%;\n    margin: 0 auto;\n    `;\n  function Span(_ref) {\n    let {\n      space = 20\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        paddingRight: space\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  //css 끝\n\n  let blobURL = \"\";\n  let pdbdata = \"\";\n  let input_seq = \"\";\n  const getDataLocalStorage = name => {\n    var localData = localStorage.getItem(name);\n    return localData;\n  };\n  const pdbdownload = () => {\n    const file = document.createElement('a');\n    const pdbblob = new Blob([pdbdata], {\n      type: \"chemical/x-pdb\"\n    });\n    console.log(pdbblob);\n    if (pdbblob) {\n      file.href = URL.createObjectURL(pdbblob);\n      file.download = `${input_seq}.pdb`;\n      document.body.appendChild(file); //FireFox\n      file.click();\n      file.remove();\n      //blobURL = URL.createObjectURL(pdbblob)\n      //window.location.href = blobURL;\n    }\n  };\n\n  if (localStorage.getItem('pdbData')) {\n    pdbdata = getDataLocalStorage('pdbData');\n    console.log(pdbdata);\n    input_seq = getDataLocalStorage(\"input_seq\");\n    console.log(input_seq);\n  }\n\n  // 시각화\n  $(function () {\n    let element = $('#container-predict');\n    let config = {\n      backgroundColor: 'white'\n    };\n    let viewer = $3Dmol.createViewer(element, config);\n    viewer.addModel(pdbdata, \"pdb\"); /* load data */\n    viewer.setStyle({\n      'model': -1\n    }, {\n      cartoon: {\n        color: 'spectrum'\n      }\n    }); /* style all atoms */\n    viewer.zoomTo(); /* set camera */\n    viewer.render(); /* render scene */\n    viewer.zoom(0.8, 1000); /* slight zoom */\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container-predict\",\n        className: \"mol-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: pdbdownload,\n          className: \"download_PDB\",\n          children: \"Download PDB File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"korean-protein-expaination\",\n        children: input_seq\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_c = AlphaOutput;\nvar _c;\n$RefreshReg$(_c, \"AlphaOutput\");","map":{"version":3,"names":["React","useState","$3Dmol","$","styled","jsxDEV","_jsxDEV","AlphaOutput","Wrap","div","Span","_ref","space","style","paddingRight","fileName","_jsxFileName","lineNumber","columnNumber","blobURL","pdbdata","input_seq","getDataLocalStorage","name","localData","localStorage","getItem","pdbdownload","file","document","createElement","pdbblob","Blob","type","console","log","href","URL","createObjectURL","download","body","appendChild","click","remove","element","config","backgroundColor","viewer","createViewer","addModel","setStyle","cartoon","color","zoomTo","render","zoom","className","children","id","onClick","_c","$RefreshReg$"],"sources":["P:/konfold/Github/graduation_project/konfold_front/src/pages/AlphaOutput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as $3Dmol from '3dmol/build/3Dmol.js';\r\nimport $ from 'jquery';\r\nimport styled from 'styled-components';\r\n\r\nexport default function AlphaOutput() {\r\n  //css 할 변수\r\n  const Wrap = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    background: #f7f7f7 ;\r\n    max-width: 80%;\r\n    margin: 0 auto;\r\n    `;\r\n  function Span({ space = 20 }){\r\n    return (\r\n      <span style={{ paddingRight: space }}></span>\r\n      );\r\n  }\r\n//css 끝\r\n\r\n  let blobURL = \"\";\r\n  let pdbdata = \"\";\r\n  let input_seq = \"\";\r\n\r\n\r\n  const getDataLocalStorage = (name) => {\r\n    var localData = localStorage.getItem(name);\r\n    return localData;\r\n  }\r\n\r\n  const pdbdownload = () => {\r\n    const file = document.createElement('a');\r\n    const pdbblob = new Blob([pdbdata], {\r\n      type: \"chemical/x-pdb\",\r\n    });\r\n    console.log(pdbblob)\r\n    if (pdbblob) {\r\n      file.href = URL.createObjectURL(pdbblob)\r\n      file.download = `${input_seq}.pdb`\r\n      document.body.appendChild(file); //FireFox\r\n      file.click();\r\n      file.remove();\r\n      //blobURL = URL.createObjectURL(pdbblob)\r\n      //window.location.href = blobURL;\r\n    }\r\n  };\r\n\r\n\r\n  if (localStorage.getItem('pdbData')) {\r\n    pdbdata = getDataLocalStorage('pdbData');\r\n    console.log(pdbdata);\r\n    input_seq = getDataLocalStorage(\"input_seq\");\r\n    console.log(input_seq);\r\n  }\r\n\r\n  // 시각화\r\n  $(function() {\r\n    let element = $('#container-predict');\r\n    let config = { backgroundColor: 'white' };\r\n    let viewer = $3Dmol.createViewer( element, config );\r\n\r\n    viewer.addModel( pdbdata, \"pdb\" );                       /* load data */\r\n    viewer.setStyle({'model': -1}, {cartoon: {color: 'spectrum'}});  /* style all atoms */\r\n    viewer.zoomTo();                                      /* set camera */\r\n    viewer.render();                                      /* render scene */\r\n    viewer.zoom(0.8, 1000);                               /* slight zoom */\r\n  \r\n  });\r\n  \r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"container\">\r\n      <div id=\"container-predict\" className=\"mol-container\"></div>\r\n      <div>\r\n      <button \r\n        onClick={pdbdownload}\r\n        className = \"download_PDB\">\r\n          Download PDB File\r\n      </button>\r\n      </div>\r\n\r\n      <h1 className=\"korean-protein-expaination\">{input_seq}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}