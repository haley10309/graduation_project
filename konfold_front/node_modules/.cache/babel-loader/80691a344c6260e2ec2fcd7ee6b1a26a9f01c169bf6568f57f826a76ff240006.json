{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/project/konfold_front/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n  const [proteinName, setProteinName] = useState(\"\"); // 저장 후 변수\n  const [Id, setId] = useState([]);\n  const [button, setButton] = useState(true);\n  const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n  function changeButton() {\n    const UpperProtein = protein.toUpperCase();\n\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    UpperProtein.includes(\"B\") || UpperProtein.includes(\"J\") || UpperProtein.includes(\"O\") || UpperProtein.includes(\"X\") || UpperProtein.includes(\"Z\") || UpperProtein.includes(\" \") || !isAlpha(UpperProtein) ? setButton(true) : setButton(false);\n  }\n  const handleInput = event => {\n    event.preventDefault();\n    setProtein(event.target.value); //변수 저장 완료\n    // const UpperProtein = protein.toUpperCase();\n    // UpperProtein.includes('G' ||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n  };\n\n  const confirm = async event => {\n    // 확인 후 다음 페이지\n    event.preventDefault();\n    setProteinName(protein);\n\n    //window.location.href = \"/proteinInput\";\n\n    // const result = await axios.get('http://127.0.0.1:5000/api/Input');\n    // this.recordCount = result.headers[\"x-totalrecordcount\"];\n\n    // axios.get('http://127.0.0.1:5000/api/Input',\n    //   {params: { \"proteinName\" : protein }\n    // }).then(function (response) {\n    //   console.log(protein);\n    //  }).catch(function (error){\n    //   console.log(error);\n    //  })\n\n    await axios.post('/api/Input', {\n      proteinName: protein\n    }).then(function (response) {\n      console.log(\"포스트 완료\");\n    }).catch(function (error) {\n      console.log(error);\n    });\n    fetch(\"/api/Input\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    }).then(res => {\n      console.log(res + \"res 데이터 그대로\");\n      let hand = JSON.stringify(res);\n      console.log(hand + \"얍1\");\n      //json 파싱전 , 상태 코드 확인 해서 res 값 초기화\n    }).then(res => {\n      let hand = JSON.stringify(res);\n      console.log(hand + \"얍2\");\n      console.log(res + \"얍3\");\n      setId(res);\n      //res 값에 따른 결과 처리\n      if (res == null) {\n        console.log(\"가공 데이터 가져오기 실패\");\n      }\n    });\n    window.location.href = \"/proteinInput\";\n\n    //console.log(protein);\n\n    //api post\n\n    localStorage.setItem('proteinName', protein);\n    //localstorage 업로드\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleprotein\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputTitle\",\n        children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: protein //input으로 받은 프로틴 시퀀스\n          ,\n          onChange: handleInput,\n          onKeyUp: changeButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: \"\\uC62C\\uBC14\\uB978 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: button,\n        onClick: confirm,\n        className: \"bottomButton\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputTitle\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 3D \\uAD6C\\uC870 \\uC2DC\\uAC01\\uD654 \\uD654\\uBA74\\uC785\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"ZwaICwWgAPRZOIh9VPf8+vTkOyI=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","axios","Link","useEffect","useState","jsxDEV","_jsxDEV","Search","_s","protein","setProtein","proteinName","setProteinName","Id","setId","button","setButton","isAlpha","str","test","changeButton","UpperProtein","toUpperCase","includes","handleInput","event","preventDefault","target","value","confirm","post","then","response","console","log","catch","error","fetch","method","headers","res","hand","JSON","stringify","window","location","href","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onKeyUp","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/project/konfold_front/src/pages/Search.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\"; \nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\n\n\n\n\nexport default function Search(){\n  \n  const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n  const [proteinName, setProteinName] = useState(\"\"); // 저장 후 변수\n  const [Id, setId] = useState([]);\n\n  const [button, setButton] = useState(true);\n  const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n    \n    \n\n  function changeButton(){\n    const UpperProtein = protein.toUpperCase();\n   \n   // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    (UpperProtein.includes(\"B\") || UpperProtein.includes(\"J\") || UpperProtein.includes(\"O\") || UpperProtein.includes(\"X\") || UpperProtein.includes(\"Z\") || UpperProtein.includes(\" \") || (!isAlpha(UpperProtein))) ? setButton(true) : setButton(false)\n\n   }\n\n\n  const handleInput = (event) => {\n    event.preventDefault();\n    setProtein(event.target.value); //변수 저장 완료\n    // const UpperProtein = protein.toUpperCase();\n    // UpperProtein.includes('G' ||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n  };\n  \n  \n   const confirm = async (event) => {\n    // 확인 후 다음 페이지\n    event.preventDefault();\n    setProteinName(protein);\n\n    \n\n    //window.location.href = \"/proteinInput\";\n\n    // const result = await axios.get('http://127.0.0.1:5000/api/Input');\n    // this.recordCount = result.headers[\"x-totalrecordcount\"];\n\n    // axios.get('http://127.0.0.1:5000/api/Input',\n    //   {params: { \"proteinName\" : protein }\n    // }).then(function (response) {\n    //   console.log(protein);\n    //  }).catch(function (error){\n    //   console.log(error);\n    //  })\n\n\n     \n         await axios.post('/api/Input',{\n          proteinName: protein\n        }).then(function(response){\n          console.log(\"포스트 완료\");\n\n        }).catch(function (error){\n          console.log(error);\n        })\n     \n         fetch(\"/api/Input\", {\n          method : \"POST\",\n          headers : {\n            \"Content-Type\" : \"application/json; charset=utf-8\"\n          }\n        }).then(res=> {\n          console.log(res+\"res 데이터 그대로\")\n          let hand = JSON.stringify(res);\n          console.log( hand + \"얍1\");\n          //json 파싱전 , 상태 코드 확인 해서 res 값 초기화\n        }).then(res=> {\n          let hand = JSON.stringify(res);\n          console.log( hand + \"얍2\");\n          console.log(res + \"얍3\");\n          setId(res);\n          //res 값에 따른 결과 처리\n          if(res == null){\n            console.log(\"가공 데이터 가져오기 실패\");\n          }\n        })\n\n        window.location.href = \"/proteinInput\";\n    \n    //console.log(protein);\n\n    \n    //api post\n      \n    localStorage.setItem('proteinName', protein);\n    //localstorage 업로드\n  };\n  \n\n  return (\n    <div className=\"page\">\n      <div className=\"titleprotein\">단백질 시퀀스를 입력해 주세요</div>\n\n      <div className=\"contentWrap\">\n        <div className=\"inputTitle\">단백질 시퀀스</div>\n        <div className=\"inputWrap\">\n          <input\n            className=\"input\"\n            value={protein} //input으로 받은 프로틴 시퀀스\n            onChange={handleInput}\n            onKeyUp={changeButton}\n            \n          />\n\n          {/* place holder 넣어 보기 */}\n        </div>\n\n        <div className=\"errorMessageWrap\">올바른 시퀀스를 입력해 주세요</div>\n      </div>\n      <div>\n        <button \n        disabled={button} \n        onClick={confirm} \n        className=\"bottomButton\">\n          확인\n        </button>\n      </div>\n      <div className=\"inputTitle\"> \n        단백질 3D 구조 시각화 화면입니다\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}