{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/project/konfold_front/src/pages/Reference/Pred_mech.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport NavBar_Prediction from './NavBar_Prediction.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pred_mech() {\n  const Wrap = styled.div`\n    display: flex;\n    flex-direction: row;\n    background: #f7f7f7 ;\n    max-width: 80%;\n    margin: 0 auto;\n    `;\n  function Span(_ref) {\n    let {\n      space = 20\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        paddingRight: space\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 6\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction_page\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar_Prediction, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"refer-title\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870 \\uC608\\uCE21 AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"2. Alpha Fold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), \"\\u2018Deepmind\\u2019\\uC5D0\\uC11C \\uAC1C\\uBC1C\\uD55C \\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870 \\uC608\\uCE21 \\uC778\\uACF5\\uC9C0\\uB2A5(AI) \\uD504\\uB85C\\uADF8\\uB7A8\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), \"AlphaFold\\uB294 \\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870\\uC608\\uCE21 \\uD559\\uC220\\uB300\\uD68C CASP(Critical Assessment of Structure Prediction)\\uC5D0\\uC11C \\uACF5\\uAC1C\\uB418\\uC5C8\\uB2E4. \\uD300\\uC5D0\\uAC8C \\uC804\\uB2EC\\uB418\\uB294 \\uC544\\uBBF8\\uB178\\uC0B0 \\uC11C\\uC5F4\\uC744 \\uBCF4\\uACE0 \\uD574\\uB2F9 \\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870\\uB97C \\uC608\\uCE21\\uD558\\uB294 \\uBC29\\uC2DD\\uC73C\\uB85C, AlphaFold\\uB294 \\uB2E4\\uB978 \\uD300\\uC5D0 \\uBE44\\uD574 \\uC5C4\\uCCAD\\uB09C \\uC815\\uD655\\uB3C4\\uB97C \\uAC00\\uC9C4 \\uC608\\uCE21\\uACB0\\uACFC\\uB97C \\uBE60\\uB974\\uAC8C \\uC5BB\\uC5B4\\uB0C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), \"AlphaFold1(2018, CASP13 \\uC6B0\\uC2B9)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), \"AlphaFold2(2020, CASP14 \\uC6B0\\uC2B9)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"process_img\",\n          alt: \"role\",\n          src: \"/img/structure_prediction_precise.jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n      children: /*#__PURE__*/_jsxDEV(\"hi\", {\n        className: \"img_title\",\n        children: \"\\uADF8\\uB9BC 4 \\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870 \\uC608\\uCE21 \\uC815\\uD655\\uB3C4 \\uBC1C\\uC804 \\uCD94\\uC774\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this), \"AlphaFold\\uB294 \\uC544\\uBBF8\\uB178\\uC0B0 \\uC0AC\\uC2AC\\uC758 \\uB2E8\\uC704\\uCCB4\\uC778 \\uC794\\uAE30(amino acid residue) \\uAC04\\uC758 \\uAC70\\uB9AC\\uC640 \\uAC01\\uB3C4\\uC5D0 \\uB300\\uD55C \\uC815\\uBCF4\\uB97C \\uCD94\\uCD9C\\uD558\\uC5EC \\uADF8\\uAC83\\uC744 \\uBB3C\\uB9AC \\uC2DC\\uBBAC\\uB808\\uC774\\uC158\\uC758 \\uC81C\\uC57D\\uC870\\uAC74\\uC73C\\uB85C \\uC0AC\\uC6A9\\uD55C\\uB2E4. Residue\\uB294 \\uC0AC\\uC2AC \\uB0B4\\uC5D0\\uC11C \\uC11C\\uB85C \\uC0C1\\uD638\\uC791\\uC6A9\\uD55C\\uB2E4\\uB294 \\uC0AC\\uC2E4\\uC744 \\uBC14\\uD0D5\\uC73C\\uB85C \\uC0C1\\uD638\\uC791\\uC6A9\\uC758 \\uC815\\uB3C4\\uB97C \\uCD94\\uCE21\\uD558\\uB294 \\uAC83\\uC774\\uB2E4. AlphaFold1\\uC740 \\uD559\\uC2B5\\uC758 \\uC8FC\\uC694 \\uAE30\\uC220\\uB85C\\uC11C \\uD569\\uC131\\uACF1 \\uC2E0\\uACBD\\uB9DD(CNN, Convolution Neural Network)\\uB97C \\uC774\\uC6A9\\uD55C\\uB2E4. AlphaFold2\\uB294 \\uC0C8\\uB85C \\uAC1C\\uBC1C\\uD55C \\uD559\\uC2B5 \\uBAA8\\uB378\\uC778 \\uD2B8\\uB79C\\uC2A4\\uD3EC\\uBA38(Transformer)\\uB97C \\uC774\\uC6A9\\uD558\\uBA70 AlphaFold1\\uC5D0\\uBE44\\uD574 \\uB354 \\uB9CE\\uC740 \\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870 \\uB370\\uC774\\uD130\\uB97C \\uD559\\uC2B5\\uD55C\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this), \"2022\\uB144 7\\uC6D4 AlphaFold2\\uC758 \\uB17C\\uBB38\\uACFC \\uC624\\uD508\\uC18C\\uC2A4, \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\\uAC00 \\uACF5\\uAC1C\\uB418\\uC5C8\\uB2E4. \\uACF5\\uAC1C\\uB41C \\uC790\\uB8CC\\uC5D0 \\uB530\\uB978 AlphaFold2\\uC758 \\uC544\\uD0A4\\uD14D\\uCC98\\uB294 \\uB2E4\\uC74C\\uACFC \\uAC19\\uC774 3\\uB2E8\\uACC4\\uB85C \\uAD6C\\uC131\\uB41C\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: \"AlphaFold \\uCC38\\uACE0\\uC790\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [\"Website\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 22\n      }, this), \"https://www.deepmind.com/research/highlighted-research/alphafold\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [\"Source \", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 22\n      }, this), \"https://github.com/deepmind/alphafold\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [\"Paper\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 22\n      }, this), \" \\u201CHighly accurate protein structure prediction with AlphaFold(2021)\\u201D\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }, this), \" \\u201CSupplementary information for: Highly accurate protein structure prediction with AlphaFold(2021)\\u201D\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }, this), \" \\u201CAlphaFold Protein Structure Database: massively expanding the structural coverage of protein sequence space with high-accuracy models(2022)\\u201D\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"process_img\",\n        alt: \"role\",\n        src: \"/img/model_architecture.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"img_title\",\n      children: \"\\uADF8\\uB9BC 5 AlphaFold2 model architecture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"1\\uB2E8\\uACC4. Input Feature embeddings, \\uC785\\uB825 \\uB370\\uC774\\uD130 \\uC804\\uCC98\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 16\n      }, this), \"\\uC785\\uB825 \\uB370\\uC774\\uD130\\uB97C \\uBAA8\\uB378\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uAC8C \\uC804\\uCC98\\uB9AC\\uD558\\uB294 \\uB2E8\\uACC4\\uC774\\uB2E4. \\uB2E8\\uBC31\\uC9C8 \\uC11C\\uC5F4\\uC774 \\uC785\\uB825\\uB418\\uBA74 \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\\uC5D0\\uC11C \\uC720\\uC0AC\\uD55C \\uC11C\\uC5F4\\uC744 \\uAC80\\uC0C9\\uD558\\uC5EC \\uB2E4\\uC911\\uC11C\\uC5F4\\uC815\\uB82C(MSA, Multiple Sequence Alignment)\\uB97C \\uC0DD\\uC131\\uD558\\uACE0, \\uC54C\\uB824\\uC9C4 \\uB2E8\\uBC31\\uC9C8 \\uD15C\\uD50C\\uB9BF\\uC5D0\\uC11C \\uC720\\uC0AC\\uD55C \\uC11C\\uC5F4\\uC744 \\uAC00\\uC9C4 \\uBD80\\uBD84\\uC744 pairing\\uD55C\\uB2E4. \\uADF8\\uB9AC\\uACE0 \\uC774\\uB97C \\uD1B5\\uD569\\uD574 MSA representation\\uACFC Pair representation\\uC744 \\uB9CC\\uB4E0\\uB2E4. \\uC774 \\uACFC\\uC815\\uC744 \\uC5EC\\uB7EC \\uBC88 \\uBC18\\uBCF5\\uD55C \\uACB0\\uACFC\\uC758 \\uD3C9\\uADE0\\uAC12\\uC744 \\uB2E4\\uC74C\\uB2E8\\uACC4\\uB85C \\uB0B4\\uBCF4\\uB0B8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), \"input: amino-acid sequence\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), \"output: Create the initial version of the MSA representation and pair representation\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), \"-Genetic database search \\uD83E\\uDC6A MSA \\uD83E\\uDC6A MSA representation (\\uC9C4\\uD654\\uC801 \\uD2B9\\uC9D5 \\uBC18\\uC601)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), \"-Amino acid paring \\uD83E\\uDC6A 2\\uCC28\\uC6D0 \\uD615\\uD0DC\\uB85C \\uBCC0\\uD658 \\uD83E\\uDC6A pair representation (\\uACF5\\uAC04\\uC801 \\uD2B9\\uC9D5 \\uBC18\\uC601)        \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"2\\uB2E8\\uACC4. Evoformer, Attention \\uD559\\uC2B5\\uC744 \\uD1B5\\uD574 \\uC804\\uCC98\\uB9AC\\uB41C \\uB370\\uC774\\uD130\\uC5D0\\uC11C \\uD544\\uC694\\uD55C \\uC815\\uBCF4 \\uCD94\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"process_img\",\n        alt: \"role\",\n        src: \"/img/evoformer_block.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"img_title\",\n      children: \"\\uADF8\\uB9BC 6 Evofomer block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\uC8FC\\uC5B4\\uC9C4 MSA representation\\uACFC pair representation\\uC744 self-attention \\uBA54\\uCEE4\\uB2C8\\uC998\\uC5D0 \\uC801\\uC6A9\\uD558\\uC5EC \\uD544\\uC694\\uD55C \\uC815\\uBCF4\\uB9CC \\uAC16\\uB3C4\\uB85D \\uAC1C\\uC120\\uD558\\uB294 \\uB2E8\\uACC4\\uC774\\uB2E4. \\uC774 \\uB2E8\\uACC4\\uC5D0\\uC11C\\uB294 \\uAC01\\uAC01\\uC758 representation\\uC774 \\uC785\\uB825\\uB418\\uC5B4 \\uB2E8\\uBC31\\uC9C8\\uC758 \\uACF5\\uAC04\\uC801, \\uC9C4\\uD654\\uC801 \\uAD00\\uACC4\\uC5D0 \\uB300\\uD55C \\uC9C1\\uC811\\uC801\\uC778 \\uCD94\\uB860\\uC744 \\uAC00\\uB2A5\\uD558\\uAC8C \\uD558\\uB294 \\uC815\\uBCF4\\uB97C \\uAD50\\uD658\\uD568\\uC73C\\uB85C\\uC368 \\uBC18\\uBCF5\\uC801\\uC73C\\uB85C \\uAC1C\\uC120\\uB41C\\uB2E4. \\uADF8 \\uACB0\\uACFC \\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870\\uC5D0 \\uB300\\uD55C 2D representation\\uC744 \\uC5BB\\uAC8C \\uB41C\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), \"input: the initial version of the MSA representation and pair representation\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), \"output: the final (best version) of the MSA representation and pair representation\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"3\\uB2E8\\uACC4. Structure module, 2\\uB2E8\\uACC4\\uC5D0\\uC11C \\uBF51\\uC544\\uB0B8 \\uC815\\uBCF4\\uB97C \\uAD6C\\uCCB4\\uC801\\uC778 3\\uCC28\\uC6D0 \\uC88C\\uD45C\\uB85C \\uCC98\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\uC804 \\uB2E8\\uACC4\\uC5D0\\uC11C \\uB9CC\\uB4E4\\uC5B4\\uC9C4 \\uCD5C\\uC885 2D representation \\uC815\\uBCF4\\uB97C 3D \\uC88C\\uD45C\\uB85C \\uBCC0\\uD658\\uD558\\uB294 \\uB2E8\\uACC4\\uC774\\uB2E4. \\uC774\\uAC83\\uC740 weight\\uB97C \\uACF5\\uC720\\uD558\\uB294 8\\uAC1C\\uC758 RNN \\uBE14\\uB85D\\uC5D0\\uC11C \\uC218\\uD589\\uB41C\\uB2E4. \\uCD08\\uAE30 3D \\uC88C\\uD45C\\uB294 \\uB2E8\\uBC31\\uC9C8\\uC758 \\uBAA8\\uB4E0 \\uC794\\uAE30\\uAC00 \\uB3D9\\uC77C\\uD55C \\uC704\\uCE58\\uC640 \\uBC29\\uD5A5\\uC744 \\uAC16\\uAC8C \\uBC30\\uCE58\\uB41C\\uB2E4. \\uADF8\\uB9AC\\uACE0 RNN \\uBE14\\uB85D \\uB0B4\\uC5D0\\uC11C IPA(Invariant Point Attention) \\uC5F0\\uC0B0\\uC744 \\uC0AC\\uC6A9\\uD55C \\uC5C5\\uB370\\uC774\\uD2B8, equivariant \\uC5C5\\uB370\\uC774\\uD2B8, \\uBE44\\uD2C0\\uB9BC \\uAC01\\uB3C4\\uB97C \\uC608\\uCE21\\uD558\\uB294 \\uACFC\\uC815\\uC744 \\uAC70\\uCCD0 \\uCD5C\\uC885\\uC801\\uC778 3\\uCC28\\uC6D0 \\uC88C\\uD45C\\uB97C \\uC5BB\\uAC8C \\uB41C\\uB2E4. \\uC774\\uB54C \\uCD9C\\uB825\\uB2E8\\uACC4\\uC5D0\\uC11C \\uC608\\uCE21 \\uC704\\uCE58\\uC758 \\uC815\\uD655\\uB3C4\\uB97C \\uACC4\\uC0B0\\uD558\\uB294 \\uACFC\\uC815\\uB3C4 \\uD3EC\\uD568\\uB41C\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), \"input: final of MSA representation, Pair representation (2D representation)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), \"output: rotation, translation, angle\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), \"- Backbone (global frame) \\uC608\\uCE21\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), \"- Side chain (local frame) \\uC608\\uCE21\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"ref_left\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), \"- pLDDT(per-residue confidence score, \\uC794\\uB958\\uBB3C\\uBCC4 \\uC2E0\\uB8B0\\uB3C4 \\uBA54\\uD2B8\\uB9AD): \\uC608\\uCE21\\uC758 \\uC2E0\\uB8B0\\uB3C4 \\uC790\\uCCB4 \\uD310\\uB2E8\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"RoseTTA(Three-Track Attention)Fold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\u2018Baker \\uC5F0\\uAD6C\\uD300\\u2019\\uC5D0\\uC11C AlphaFold\\uC5D0\\uC11C \\uC601\\uAC10\\uC744 \\uC5BB\\uC5B4 \\uAC1C\\uBC1C\\uD55C \\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870 \\uC608\\uCE21 \\uC778\\uACF5\\uC9C0\\uB2A5(AI) \\uD504\\uB85C\\uADF8\\uB7A8 AlphaFold2\\uC758 \\uC624\\uD508\\uC18C\\uC2A4\\uAC00 \\uACF5\\uAC1C\\uB418\\uAE30 \\uC804 Baker \\uC5F0\\uAD6C\\uD300\\uC740 \\uC774\\uC640 \\uBE44\\uC2B7\\uD55C AI \\uBAA8\\uB378\\uC744 \\uAC1C\\uBC1C\\uD588\\uC73C\\uBA70 AlphaFold2\\uC640 \\uAC70\\uC758 \\uBE44\\uC2B7\\uD55C \\uC131\\uB2A5\\uC744 \\uB098\\uD0C0\\uB0B4 \\uC774\\uBAA9\\uC744 \\uB04C\\uC5C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"process_img\",\n        alt: \"role\",\n        src: \"/img/perform_Roseta.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"RoseTTAFold \\uB610\\uD55C 2022\\uB144 7\\uC6D4 \\uB17C\\uBB38\\uACFC \\uC624\\uD508\\uC18C\\uC2A4\\uB97C \\uACF5\\uAC1C\\uD588\\uC73C\\uBA70 \\uC774\\uC5D0 \\uB530\\uB978 \\uBA54\\uCEE4\\uB2C8\\uC998\\uC740 \\uB2E4\\uC74C\\uACFC \\uAC19\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"process_img\",\n        alt: \"role\",\n        src: \"/img/roseta_mech.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c = Pred_mech;\nvar _c;\n$RefreshReg$(_c, \"Pred_mech\");","map":{"version":3,"names":["React","useEffect","useState","styled","NavBar_Prediction","jsxDEV","_jsxDEV","Pred_mech","Wrap","div","Span","_ref","space","style","paddingRight","fileName","_jsxFileName","lineNumber","columnNumber","className","children","alt","src","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/project/konfold_front/src/pages/Reference/Pred_mech.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport NavBar_Prediction from './NavBar_Prediction.js';\n\n\nexport default function Pred_mech(){\n\n    const Wrap = styled.div`\n    display: flex;\n    flex-direction: row;\n    background: #f7f7f7 ;\n    max-width: 80%;\n    margin: 0 auto;\n    `;\n\n    \n    function Span({ space = 20 }){\n\treturn (\n    \t<span style={{ paddingRight: space }}></span>\n    );\n}\n\n    return (\n        <div className=\"prediction_page\">\n            <NavBar_Prediction/>\n            <h1 className=\"refer-title\">\n            단백질 구조 예측 AI\n            </h1>\n            <h1 className=\"title-N1\">\n            2. Alpha Fold\n            </h1>\n      <h1 className=\"korean-protein-expaination\">\n      <Span /><Span />\n      ‘Deepmind’에서 개발한 단백질 구조 예측 인공지능(AI) 프로그램\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      <Span /><Span />\nAlphaFold는 단백질 구조예측 학술대회 CASP(Critical Assessment of Structure Prediction)에서 공개되었다. 팀에게 전달되는 아미노산 서열을 보고 해당 단백질 구조를 예측하는 방식으로, AlphaFold는 다른 팀에 비해 엄청난 정확도를 가진 예측결과를 빠르게 얻어냈다.\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      <Span /><Span />\n      AlphaFold1(2018, CASP13 우승)\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      <Span /><Span />\n      AlphaFold2(2020, CASP14 우승) \n      </h1>\n      <Wrap >\n      <div>\n        <img className=\"process_img\" alt=\"role\" src=\"/img/structure_prediction_precise.jpeg\" />\n      </div>\n      \n      </Wrap>\n      <Wrap>\n      <hi className=\"img_title\">\n      그림 4 단백질 구조 예측 정확도 발전 추이\n          \n        </hi>\n       \n        </Wrap>\n\n        <h1 className=\"korean-protein-expaination\">\n      <Span /><Span />\n      AlphaFold는 아미노산 사슬의 단위체인 잔기(amino acid residue) 간의 거리와 각도에 대한 정보를 추출하여 그것을 물리 시뮬레이션의 제약조건으로 사용한다. Residue는 사슬 내에서 서로 상호작용한다는 사실을 바탕으로 상호작용의 정도를 추측하는 것이다. AlphaFold1은 학습의 주요 기술로서 합성곱 신경망(CNN, Convolution Neural Network)를 이용한다. AlphaFold2는 새로 개발한 학습 모델인 트랜스포머(Transformer)를 이용하며 AlphaFold1에비해 더 많은 단백질 구조 데이터를 학습한다.\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      <Span /><Span />\n      2022년 7월 AlphaFold2의 논문과 오픈소스, 데이터베이스가 공개되었다. 공개된 자료에 따른 AlphaFold2의 아키텍처는 다음과 같이 3단계로 구성된다.\n      </h1>\n      <hi className=\"ref_left\">\n      AlphaFold 참고자료\n        </hi>\n        \n      <hi className=\"ref_left\">\n      Website<Span /><Span />https://www.deepmind.com/research/highlighted-research/alphafold\n\n        </hi>\n        \n      <hi className=\"ref_left\">\n      Source <Span /><Span />https://github.com/deepmind/alphafold\n        </hi>\n        <hi className=\"ref_left\">\n        Paper<Span /><Span />\t“Highly accurate protein structure prediction with AlphaFold(2021)”\n        </hi>\n        <hi className=\"ref_left\">\n        <Span /><Span /><Span /><Span />\t“Supplementary information for: Highly accurate protein structure prediction with AlphaFold(2021)”\n        </hi>\n        <hi className=\"ref_left\">\n        <Span /><Span /><Span /><Span />\t“AlphaFold Protein Structure Database: massively expanding the structural coverage of protein sequence space with high-accuracy models(2022)”\n        </hi>\n        <div>\n        <img className=\"process_img\" alt=\"role\" src=\"/img/model_architecture.png\" />\n      </div>\n      <hi className=\"img_title\">\n      그림 5 AlphaFold2 model architecture\n        </hi>\n        <h1 className=\"korean-protein-expaination\">\n      1단계. Input Feature embeddings, 입력 데이터 전처리\n       </h1>\n       <h1 className=\"korean-protein-expaination\">\n       <Span /><Span />입력 데이터를 모델에서 사용할 수 있게 전처리하는 단계이다. 단백질 서열이 입력되면 데이터베이스에서 유사한 서열을 검색하여 다중서열정렬(MSA, Multiple Sequence Alignment)를 생성하고, 알려진 단백질 템플릿에서 유사한 서열을 가진 부분을 pairing한다. 그리고 이를 통합해 MSA representation과 Pair representation을 만든다. 이 과정을 여러 번 반복한 결과의 평균값을 다음단계로 내보낸다.\n       </h1>\n       <hi className=\"ref_left\">\n        <Span /><Span />\n        input: amino-acid sequence\n        </hi>\n        <hi className=\"ref_left\">\n        <Span /><Span />\t\n        output: Create the initial version of the MSA representation and pair representation\n        </hi>\n        <hi className=\"ref_left\">\n        <Span /><Span />\t\n        -Genetic database search 🡪 MSA 🡪 MSA representation (진화적 특징 반영)\n        </hi>\n        <hi className=\"ref_left\">\n        <Span /><Span />\t\n        -Amino acid paring 🡪 2차원 형태로 변환 🡪 pair representation (공간적 특징 반영)        </hi>\n        <h1 className=\"korean-protein-expaination\">\n        2단계. Evoformer, Attention 학습을 통해 전처리된 데이터에서 필요한 정보 추출\n       </h1>\n       <div>\n        <img className=\"process_img\" alt=\"role\" src=\"/img/evoformer_block.png\" />\n      </div>\n      <hi className=\"img_title\">\n      그림 6 Evofomer block\n      </hi>\n      <h1 className=\"korean-protein-expaination\">\n      주어진 MSA representation과 pair representation을 self-attention 메커니즘에 적용하여 필요한 정보만 갖도록 개선하는 단계이다. 이 단계에서는 각각의 representation이 입력되어 단백질의 공간적, 진화적 관계에 대한 직접적인 추론을 가능하게 하는 정보를 교환함으로써 반복적으로 개선된다. 그 결과 단백질 구조에 대한 2D representation을 얻게 된다. \n       </h1>\n       <hi className=\"ref_left\">\n        <Span /><Span />\t\n        input: the initial version of the MSA representation and pair representation        \n        </hi>\n        <hi className=\"ref_left\">\n        <Span /><Span />\t\n        output: the final (best version) of the MSA representation and pair representation        \n        </hi>\n        <h1 className=\"korean-protein-expaination\">\n        3단계. Structure module, 2단계에서 뽑아낸 정보를 구체적인 3차원 좌표로 처리\n         </h1>\n         <h1 className=\"korean-protein-expaination\">\n         전 단계에서 만들어진 최종 2D representation 정보를 3D 좌표로 변환하는 단계이다. 이것은 weight를 공유하는 8개의 RNN 블록에서 수행된다. 초기 3D 좌표는 단백질의 모든 잔기가 동일한 위치와 방향을 갖게 배치된다. 그리고 RNN 블록 내에서 IPA(Invariant Point Attention) 연산을 사용한 업데이트, equivariant 업데이트, 비틀림 각도를 예측하는 과정을 거쳐 최종적인 3차원 좌표를 얻게 된다. 이때 출력단계에서 예측 위치의 정확도를 계산하는 과정도 포함된다.\n         </h1>\n         <hi className=\"ref_left\">\n        <Span /><Span />\t\n        input: final of MSA representation, Pair representation (2D representation)        \n        </hi>\n        <hi className=\"ref_left\">\n        <Span /><Span />\t\n        output: rotation, translation, angle\n         </hi>\n         <hi className=\"ref_left\">\n        <Span /><Span />\t\n        - Backbone (global frame) 예측\n         </hi>\n         <hi className=\"ref_left\">\n        <Span /><Span />\t\n        - Side chain (local frame) 예측\n         </hi>\n         <hi className=\"ref_left\">\n        <Span /><Span />\t\n        - pLDDT(per-residue confidence score, 잔류물별 신뢰도 메트릭): 예측의 신뢰도 자체 판단\n         </hi>\n         <h1 className=\"title-N1\">\n         RoseTTA(Three-Track Attention)Fold\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      ‘Baker 연구팀’에서 AlphaFold에서 영감을 얻어 개발한 단백질 구조 예측 인공지능(AI) 프로그램\nAlphaFold2의 오픈소스가 공개되기 전 Baker 연구팀은 이와 비슷한 AI 모델을 개발했으며 AlphaFold2와 거의 비슷한 성능을 나타내 이목을 끌었다.\n         </h1>\n         <div>\n        <img className=\"process_img\" alt=\"role\" src=\"/img/perform_Roseta.png\" />\n      </div>\n      <h1 className=\"korean-protein-expaination\">\n      RoseTTAFold 또한 2022년 7월 논문과 오픈소스를 공개했으며 이에 따른 메커니즘은 다음과 같다.\n      </h1>\n      <div>\n        <img className=\"process_img\" alt=\"role\" src=\"/img/roseta_mech.png\" />\n      </div>\n\n\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}