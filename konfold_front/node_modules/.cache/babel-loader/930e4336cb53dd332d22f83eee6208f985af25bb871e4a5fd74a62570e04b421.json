{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/project/konfold_front/src/pages/Reference/HowAlpha.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HowAlpha() {\n  const Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #f7f7f7 ;\n  max-width: 80%;\n  margin: 0 auto;\n`;\n  function Span(_ref) {\n    let {\n      space = 20\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        paddingRight: space\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 6\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"refer-title\",\n      children: \"\\uC0AC\\uC6A9\\uBC95\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"1. AlphaFold2 (Ubuntu 22.04)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"(1) AlphaFold(.git) cloning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"git(\\uD504\\uB85C\\uADF8\\uB798\\uBC0D \\uCF54\\uB4DC \\uBC84\\uC804 \\uAD00\\uB9AC \\uD504\\uB85C\\uADF8\\uB7A8) \\uC124\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"$ which git  //git \\uC124\\uCE58\\uC5EC\\uBD80 \\uD655\\uC778\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \"$ sudo apt install git //git \\uC124\\uCE58\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"AlphaFold \\uD074\\uB85C\\uB2DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"$ mkdir /[filename]\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }, this), \"$ cd /[filename]  //AlphaFold2 git\\uB97C \\uC800\\uC7A5\\uD558\\uACE0\\uC790 \\uD558\\uB294 \\uD3F4\\uB354\\uC5D0 \\uC811\\uC18D\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 8\n      }, this), \"$ git clone https://github.com/deepmind/alphafold.git\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"(2) Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"Aria2(\\uB2E4\\uC911\\uC11C\\uBC84 \\uBA85\\uB839 \\uC904 \\uB2E4\\uC6B4\\uB85C\\uB4DC \\uC720\\uD2F8\\uB9AC\\uD2F0) \\uC124\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"$ which aria2c  //aria2 \\uC124\\uCE58\\uC5EC\\uBD80 \\uD655\\uC778\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }, this), \"$ sudo apt install aria2 //aria2 \\uC124\\uCE58\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"Alphafold/scripts \\uC18D \\uD30C\\uC77C\\uC744 \\uBD88\\uB7EC\\uC640 database\\uB97C \\uB2E4\\uC6B4\\uB85C\\uB4DC(\\uCF54\\uB4DC \\uC218\\uC815 \\uC2DC \\uC120\\uD0DD\\uC801\\uC73C\\uB85C \\uB2E4\\uC6B4\\uB85C\\uB4DC \\uAC00\\uB2A5)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"$ cd /[filename]/alphafold  //alphafold\\uAC00 \\uD074\\uB85C\\uB2DD\\uB41C \\uD3F4\\uB354\\uB85C \\uC811\\uC18D\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }, this), \"//alphafold\\uC640 \\uB2E4\\uB978 \\uD3F4\\uB354\\uC5D0 \\uC800\\uC7A5\\uD558\\uB294 \\uAC83\\uC774 \\uC88B\\uC74C\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }, this), \"//reduced_dbs\\uB294 \\uC6A9\\uB7C9 \\uC791\\uC740 \\uBC84\\uC804\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }, this), \"$ sudo scripts/download_all_data.sh /[filename]/db/ reduced_dbs\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"(3) Docker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"//docker repository\\uB97C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uAC8C \\uD544\\uC218 \\uD328\\uD0A4\\uC9C0 \\uC124\\uCE58\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), \"$ sudo apt install apt-transport-https ca-certifiates curl gnupg lsb-release\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), \"//docker\\uC640 \\uC554\\uD638\\uD654 \\uD1B5\\uC2E0\\uC744 \\uC704\\uD55C GPG keyrings \\uCD94\\uAC00\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), \"$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dreamor -o /usr/share/keyrings/docker-archive-keyring.gpg\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), \"//\\uC124\\uCE58\\uD560 \\uC2DC\\uC2A4\\uD15C\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 docker repository\\uB97C \\uCD94\\uAC00 \\uD6C4 apt update\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), \"$echo \\\"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\\\" | sudo tee /etc/apt/sources.list.d/docker.list \\uC5EC\\uAE30 /dev/null\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), \"$ sudo apt update\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), \"//docker-ce, docker-ce-cli, containerd.io \\uC124\\uCE58\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), \"$ sudo apt install docker-ce docker-ce-cli containerd.io\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), \"//docker \\uC124\\uCE58 \\uD655\\uC778 (docker\\uC758 hello-world \\uC2E4\\uD589)\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), \"$ sudo docker run hello-world\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), \"$ sudo apt update //\\uC124\\uCE58 \\uAC00\\uB2A5\\uD55C \\uB3C4\\uAD6C\\uB4E4\\uC758 \\uBAA9\\uB85D\\uC744 \\uAC31\\uC2E0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"(\\uCC38\\uACE0) apt list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"Apt list\\uC5D0 \\uAE30\\uB85D\\uB41C \\uC800\\uC7A5\\uC18C(repository)\\uB4E4\\uC774 apt update \\uC2DC \\uC790\\uB3D9\\uC73C\\uB85C \\uC5C5\\uB370\\uC774\\uD2B8 \\uB41C\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"/etc/apt/sources.list\\uC5D0\\uC11C \\uD655\\uC778 \\uAC00\\uB2A5\\uD558\\uBA70, vi \\uD3B8\\uC9D1\\uAE30 (vi/etc/apt/sources.list)\\uB85C \\uD3B8\\uC9D1\\uAC00\\uB2A5\\uD558\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"docker\\uB97C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uB294 \\uC0AC\\uC6A9\\uC790(\\uD604\\uC7AC \\uCEF4\\uD4E8\\uD130\\uC758 \\uC0AC\\uC6A9\\uC790 \\uACC4\\uC815)\\uB97C \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"$ sudo groupadd docker   //\\uC0AC\\uC6A9\\uC790 \\uADF8\\uB8F9\\uC5D0 docker \\uCD94\\uAC00\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 8\n      }, this), \"$ sudo usermod -aG docker $USER //\\uD604\\uC7AC \\uC0AC\\uC6A9\\uC790 \\uACC4\\uC815\\uC744 docker \\uC0AC\\uC6A9\\uC790 \\uADF8\\uB8F9\\uC5D0 \\uCD94\\uAC00\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 8\n      }, this), \"$ newgrp docker   //\\uACC4\\uC815 \\uB85C\\uADF8\\uC544\\uC6C3 \\uD6C4 \\uC7AC\\uB85C\\uADF8\\uC778\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 8\n      }, this), \"//\\uC77C\\uBC18 \\uC0AC\\uC6A9\\uC790\\uB85C\\uC11C \\uB3C4\\uCEE4 \\uC0AC\\uC6A9\\uAC00\\uB2A5\\uC5EC\\uBD80 \\uD655\\uC778 (docker\\uC758 hello-world \\uC2E4\\uD589)\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 8\n      }, this), \"$ docker run hello-world\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"(4) \\uADF8\\uB798\\uD53D \\uCC98\\uB9AC \\uC7A5\\uCE58 (GPU) \\uB4DC\\uB77C\\uC774\\uBC84 \\uAD6C\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"GPU \\uC0AC\\uC6A9 \\uAC00\\uB2A5 \\uC5EC\\uBD80 \\uD655\\uC778 (GPU \\uBAA9\\uB85D\\uC774 \\uD45C\\uC2DC\\uB418\\uC9C0 \\uC54A\\uC740 \\uACBD\\uC6B0 \\uB2E4\\uC74C\\uC758 \\uACFC\\uC815\\uC744 \\uB530\\uB978\\uB2E4.)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: \"$ docker run --gpus all nvidia/cuda:11.5.2-base-ubuntu20.04 nvidia-smi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\uC0AC\\uC6A9\\uAC00\\uB2A5\\uD55C GPU \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"$ sudo update-pciids\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 8\n      }, this), \"$ lspci | grep VGA\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this), \"\\uC608\\uC2DC \\uACB0\\uACFC: [Geforce RTX 3070 Ti Laptop GPU]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"GPU\\uC5D0 \\uC54C\\uB9DE\\uC740 nvidia driver \\uC124\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"//\\uC124\\uCE58\\uAC00\\uB2A5\\uD55C \\uB4DC\\uB77C\\uC774\\uBC84 \\uD655\\uC778\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 8\n      }, this), \"$ ubuntu-drivers devices\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 8\n      }, this), \"//(\\uBC29\\uBC951)\\uC6D0\\uD558\\uB294 \\uBC84\\uC804 \\uC218\\uB3D9\\uC124\\uCE58\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 8\n      }, this), \"$ sudo apt install nvidia-driver-525\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 8\n      }, this), \"//(\\uBC29\\uBC952)\\uB4DC\\uB77C\\uC774\\uBC84\\uC9C1\\uC811\\uB2E4\\uC6B4(nvidia \\uC6F9\\uD398\\uC774\\uC9C0\\uC5D0\\uC11C \\uD30C\\uC77C \\uB2E4\\uC6B4\\uB85C\\uB4DC)\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 8\n      }, this), \"$ sudo sh NVIDIA-Linux-x86_64-525.105.17.run\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 8\n      }, this), \"$ which nvidia-smi // nvidia driver \\uC124\\uCE58\\uC5EC\\uBD80 \\uD655\\uC778\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 8\n      }, this), \"$ nvidia-smi  // \\uC124\\uCE58\\uB41C nvidia GPU \\uD655\\uC778\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"GPU \\uC0AC\\uC6A9\\uC744 \\uC704\\uD55C nvidia container toolkit \\uC124\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"$ distribution=$(. /etc/os-release;echo $ID$VERSION_ID)\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 8\n      }, this), \"$ curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add \\u2013\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 8\n      }, this), \"$ curl -s -L https://nvidia.github.io/nvidia-docker/ubuntu22.04/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 8\n      }, this), \"$ sudo apt update\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 8\n      }, this), \"$ sudo apt -y install nvidia-container-toolkit\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 8\n      }, this), \"$ sudo systemctl restart docker\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 8\n      }, this), \"$ docker run --gpus all nvidia/cuda:11.5.2-base-ubuntu20.04 nvidia-smi\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"GPU \\uC0AC\\uC6A9\\uC744 \\uC704\\uD55C nvidia container toolkit \\uC124\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"peptide_img\",\n          alt: \"role\",\n          src: \"/img/HowAlpha_nvidia_gpu.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"amino_img\",\n          alt: \"role\",\n          src: \"/img/HowAlpha_nvidia_container.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n      children: [/*#__PURE__*/_jsxDEV(\"hi\", {\n        className: \"img_title\",\n        children: \"\\uADF8\\uB9BC 15 nvidia GPU \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"hi\", {\n        className: \"img_title\",\n        children: \"\\uADF8\\uB9BC 16 nvidia container \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"(4) Alphafold docker \\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"Dockerfile \\uCF54\\uB4DC\\uB97C \\uC2E4\\uD589\\uD558\\uC5EC \\uB3C4\\uCEE4 \\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 (alphafold \\uD30C\\uC77C\\uC5D0 \\uC811\\uC18D\\uD55C \\uD6C4 \\uC2E4\\uD589)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"$ cd [filename]/alphafold  //alphafold\\uAC00 \\uD074\\uB85C\\uB2DD\\uB41C \\uD3F4\\uB354\\uB85C \\uC811\\uC18D\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }, this), \"$ docker build -f docker/Dockerfile -t alphafold .\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }, this), \"//python \\uD658\\uACBD\\uACFC\\uC758 \\uCDA9\\uB3CC \\uBC29\\uC9C0\\uB97C \\uC704\\uD55C python \\uAC00\\uC0C1\\uD658\\uACBD \\uC0DD\\uC131 (\\uC774\\uBBF8\\uC9C0\\uC758 \\uC694\\uAD6C\\uC0AC\\uD56D\\uC744 \\uB9DE\\uCDA4)\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }, this), \"$ sudo apt install python3-pip //pip3\\uAC00 \\uC5C6\\uB294 \\uACBD\\uC6B0 \\uBBF8\\uB9AC \\uC124\\uCE58\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }, this), \"$ pip3 install -r docker/requirements.tx\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"(5) Alphafold \\uC2E4\\uD589\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"$python3 docker/run_docker.py\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }, this), \"--fasta_paths=input/[INPUT.fasta] //input\\uD30C\\uC77C\\uC758 \\uACBD\\uB85C\\uC785\\uB825: alphafold \\uB0B4\\uC5D0 \\uC874\\uC7AC\\uD574\\uC57C \\uD55C\\uB2E4.\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }, this), \"--max_template_date=2023-04-30\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }, this), \"--data_dir=/[filename]/db/ //database\\uD30C\\uC77C\\uC758 \\uACBD\\uB85C\\uC785\\uB825\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }, this), \"--model_preset=monomer //model\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }, this), \"--db_preset=reduced_dbs  //database\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }, this), \"--output_dir=/[filename]/output/ //output\\uD30C\\uC77C\\uC758 \\uACBD\\uB85C\\uC785\\uB825\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"\\uCC38\\uACE0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\u201CAlphaFoldv2 open-source code\\u201D, https://github.com/deepmind/alphafold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\u201C2021-Highly accurate protein structure prediction with AlphaFold\\u201D, https://www.nature.com/articles/s41586-021-03819-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\u201C2021-Supplementary information for: Highly accurate protein structure prediction with AlphaFold\\u201D, https://www.uvio.bio/alphafold-architecture/AlphaFold-Supplementary-Information.pdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\u201C2022-AlphaFold Protein Structure Database: massively expanding the structural coverage of protein-sequence space with high-accuracy models\\u201D, https://academic.oup.com/nar/article/50/D1/D439/6430488?login=false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\u201CAlphaFold webpage(DeepMind)\\u201D, https://www.deepmind.com/research/highlighted-research/alphafold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\u201C[Review] AlphaFold2\\u201D, https://ocxanc.tistory.com/51\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\u201C\\uC54C\\uD30C\\uD3F4\\uB4DC2\\uBAA8\\uB378\\uBD84\\uC11D\\u201D, https://taehojo.github.io/alphafold/alphafold2.html\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\u201CAlphfafold2 \\uB17C\\uBB38\\uB9AC\\uBDF01[\\uC131\\uB2A5]\\u201D, https://happyhaelee.tistory.com/m/96\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\u201CAlphfafold2 \\uB17C\\uBB38\\uB9AC\\uBDF02[\\uC785\\uB825\\uBD80\\uBD84]\\u201D, https://happyhaelee.tistory.com/m/98\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\u201CAlphfafold2 \\uB17C\\uBB38\\uB9AC\\uBDF04[Evoformer-pair representation]\\u201D, https://happyhaelee.tistory.com/m/99\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\u201C[\\uCD08\\uC2EC\\uC790\\uB97C \\uC704\\uD55C \\uC0DD\\uBB3C\\uD559+\\uC815\\uBCF4\\uD559] \\uC54C\\uD30C\\uD3F4\\uB4DC\\uC758 \\uC124\\uCE58\\uC640 \\uC0AC\\uC6A9: \\uAE43, \\uB3C4\\uCEE4, \\uADF8\\uB9AC\\uACE0 \\uC5D4\\uBE44\\uB514\\uC544\\u201D, https://www.ibric.org/myboard/read.php?Board=news&id=337509\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = HowAlpha;\nvar _c;\n$RefreshReg$(_c, \"HowAlpha\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","styled","jsxDEV","_jsxDEV","HowAlpha","Wrap","div","Span","_ref","space","style","paddingRight","fileName","_jsxFileName","lineNumber","columnNumber","className","children","alt","src","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/project/konfold_front/src/pages/Reference/HowAlpha.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nexport default function HowAlpha() {\n  const Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #f7f7f7 ;\n  max-width: 80%;\n  margin: 0 auto;\n`;\nfunction Span({ space = 20 }){\n\treturn (\n    \t<span style={{ paddingRight: space }}></span>\n    );\n}\n\n\n  return (\n    <div className=\"prediction_page\">\n      <h1 className=\"refer-title\">\n        사용법\n        </h1>\n        <h1 className=\"title-N1\">\n        1. AlphaFold2 (Ubuntu 22.04)\n      </h1>\n      <h1 className=\"title-N1\">\n        (1) AlphaFold(.git) cloning\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      git(프로그래밍 코드 버전 관리 프로그램) 설치\t\n       </h1>\n       <div className=\"code_page\">\n       $ which git\t\t//git 설치여부 확인\n        <Span></Span>\n        $ sudo apt install git\t//git 설치\n       </div>\n       <h1 className=\"korean-protein-expaination\">\n       AlphaFold 클로닝\n       </h1>\n       <div className=\"code_page\">\n       $ mkdir /[filename]\n       <Span></Span>\n       $ cd /[filename]\t\t//AlphaFold2 git를 저장하고자 하는 폴더에 접속\n       <Span></Span>\n       $ git clone https://github.com/deepmind/alphafold.git\n\n       </div>\n       <h1 className=\"title-N1\">\n        (2) Database\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      Aria2(다중서버 명령 줄 다운로드 유틸리티) 설치\n       </h1>\n       <div className=\"code_page\">\n       $ which aria2c\t\t//aria2 설치여부 확인\n       <Span></Span>\n       $ sudo apt install aria2\t//aria2 설치\n       </div>\n       <h1 className=\"korean-protein-expaination\">\n       Alphafold/scripts 속 파일을 불러와 database를 다운로드(코드 수정 시 선택적으로 다운로드 가능)\n       </h1>\n       <div className=\"code_page\">\n       $ cd /[filename]/alphafold\t //alphafold가 클로닝된 폴더로 접속\n       <Span></Span>\n       //alphafold와 다른 폴더에 저장하는 것이 좋음\n       <Span></Span>\n       //reduced_dbs는 용량 작은 버전\n       <Span></Span>\n       $ sudo scripts/download_all_data.sh /[filename]/db/ reduced_dbs\n\n       </div>\n       <h1 className=\"title-N1\">\n        (3) Docker\n      </h1>\n      <div className=\"code_page\">\n      //docker repository를 사용할 수 있게 필수 패키지 설치\n      <Span></Span>\n      $ sudo apt install apt-transport-https ca-certifiates curl gnupg lsb-release\t\n      <Span></Span>\n      //docker와 암호화 통신을 위한 GPG keyrings 추가\n      <Span></Span>\n      $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dreamor -o /usr/share/keyrings/docker-archive-keyring.gpg\n      <Span></Span>\n      //설치할 시스템에 해당하는 docker repository를 추가 후 apt update\n      <Span></Span>\n      $echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list 여기 /dev/null\n      <Span></Span>\n      $ sudo apt update\n      <Span></Span>\n      //docker-ce, docker-ce-cli, containerd.io 설치\n      <Span></Span>\n      $ sudo apt install docker-ce docker-ce-cli containerd.io\n      <Span></Span>\n      //docker 설치 확인 (docker의 hello-world 실행)\n      <Span></Span>\n      $ sudo docker run hello-world\n      <Span></Span>\n      $ sudo apt update\t//설치 가능한 도구들의 목록을 갱신\n\n       </div>\n       <h1 className=\"korean-protein-expaination\">\n       (참고) apt list\n       </h1>\n       <h1 className=\"korean-protein-expaination\">\n       Apt list에 기록된 저장소(repository)들이 apt update 시 자동으로 업데이트 된다.\n       </h1>\n       <h1 className=\"korean-protein-expaination\">\n       /etc/apt/sources.list에서 확인 가능하며, vi 편집기 (vi/etc/apt/sources.list)로 편집가능하다.\n       </h1>\n       <h1 className=\"korean-protein-expaination\">\n       docker를 사용할 수 있는 사용자(현재 컴퓨터의 사용자 계정)를 추가\n       </h1>\n       <div className=\"code_page\">\n       $ sudo groupadd docker\t\t\t//사용자 그룹에 docker 추가\n       <Span></Span>\n       $ sudo usermod -aG docker $USER\t//현재 사용자 계정을 docker 사용자 그룹에 추가\n       <Span></Span>\n       $ newgrp docker\t\t\t//계정 로그아웃 후 재로그인\n       <Span></Span>\n       //일반 사용자로서 도커 사용가능여부 확인 (docker의 hello-world 실행)\n       <Span></Span>\n       $ docker run hello-world\n\n       </div>\n       <h1 className=\"title-N1\">\n        (4) 그래픽 처리 장치 (GPU) 드라이버 구성\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      GPU 사용 가능 여부 확인 (GPU 목록이 표시되지 않은 경우 다음의 과정을 따른다.)\n       </h1>\n       <div className=\"code_page\">\n       $ docker run --gpus all nvidia/cuda:11.5.2-base-ubuntu20.04 nvidia-smi\n       </div>\n       <h1 className=\"korean-protein-expaination\">\n       사용가능한 GPU 확인\n       </h1>\n       <div className=\"code_page\">\n       $ sudo update-pciids\n       <Span></Span>$ lspci | grep VGA\n      <Span></Span>예시 결과: [Geforce RTX 3070 Ti Laptop GPU]\n       </div>\n       <h1 className=\"korean-protein-expaination\">\n       GPU에 알맞은 nvidia driver 설치\n       </h1>\n       <div className=\"code_page\">\n       //설치가능한 드라이버 확인 \n       <Span></Span>$ ubuntu-drivers devices\n       <Span></Span>//(방법1)원하는 버전 수동설치 \n       <Span></Span>$ sudo apt install nvidia-driver-525\n       <Span></Span>//(방법2)드라이버직접다운(nvidia 웹페이지에서 파일 다운로드)\n       <Span></Span>$ sudo sh NVIDIA-Linux-x86_64-525.105.17.run \n       <Span></Span>$ which nvidia-smi\t// nvidia driver 설치여부 확인\n       <Span></Span>$ nvidia-smi\t\t// 설치된 nvidia GPU 확인\n       </div>\n       <h1 className=\"korean-protein-expaination\">\n       GPU 사용을 위한 nvidia container toolkit 설치\n       </h1>\n       <div className=\"code_page\">\n       $ distribution=$(. /etc/os-release;echo $ID$VERSION_ID)\n       <Span></Span>$ curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add – \n       <Span></Span>$ curl -s -L https://nvidia.github.io/nvidia-docker/ubuntu22.04/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list\n       <Span></Span>$ sudo apt update\n       <Span></Span>$ sudo apt -y install nvidia-container-toolkit\n       <Span></Span>$ sudo systemctl restart docker\n       <Span></Span>$ docker run --gpus all nvidia/cuda:11.5.2-base-ubuntu20.04 nvidia-smi\n       </div>\n       <h1 className=\"korean-protein-expaination\">\n       GPU 사용을 위한 nvidia container toolkit 설치\n       </h1>\n       <Wrap >\n      <div>\n        <img className=\"peptide_img\" alt=\"role\" src=\"/img/HowAlpha_nvidia_gpu.png\" />\n      </div>\n      <div>\n        <img className=\"amino_img\" alt=\"role\" src=\"/img/HowAlpha_nvidia_container.png\" />\n      </div>\n      </Wrap>\n      <Wrap>\n      <hi className=\"img_title\">\n      그림 15 nvidia GPU 확인\n      </hi>\n      <Span /><Span />\n      <hi className=\"img_title\">\n         그림 16 nvidia container 확인\n         </hi>\n         </Wrap>\n\n      <h1 className=\"title-N1\">\n        (4) Alphafold docker 이미지 생성\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      Dockerfile 코드를 실행하여 도커 이미지 생성 (alphafold 파일에 접속한 후 실행)       \n      </h1>\n      <div className=\"code_page\">\n      $ cd [filename]/alphafold\t\t//alphafold가 클로닝된 폴더로 접속\n      <Span /><Span />$ docker build -f docker/Dockerfile -t alphafold .\n      <Span /><Span />//python 환경과의 충돌 방지를 위한 python 가상환경 생성 (이미지의 요구사항을 맞춤)\n      <Span /><Span />$ sudo apt install python3-pip\t//pip3가 없는 경우 미리 설치\n      <Span /><Span />$ pip3 install -r docker/requirements.tx\n      </div>\n      <h1 className=\"title-N1\">\n        (5) Alphafold 실행\n      </h1>\n      <div className=\"code_page\">\n      $python3 docker/run_docker.py \n      <Span /><Span />--fasta_paths=input/[INPUT.fasta]\t//input파일의 경로입력: alphafold 내에 존재해야 한다.\n      <Span /><Span />--max_template_date=2023-04-30\t\n      <Span /><Span />--data_dir=/[filename]/db/\t//database파일의 경로입력\n      <Span /><Span />--model_preset=monomer\t//model\n      <Span /><Span />--db_preset=reduced_dbs \t//database\t\t\n      <Span /><Span />--output_dir=/[filename]/output/\t//output파일의 경로입력\n      </div>\n      <h1 className=\"title-N1\">\n        참고\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      “AlphaFoldv2 open-source code”, https://github.com/deepmind/alphafold\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      “2021-Highly accurate protein structure prediction with AlphaFold”,\nhttps://www.nature.com/articles/s41586-021-03819-2\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      “2021-Supplementary information for: Highly accurate protein structure prediction with AlphaFold”,\nhttps://www.uvio.bio/alphafold-architecture/AlphaFold-Supplementary-Information.pdf\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      “2022-AlphaFold Protein Structure Database: massively expanding the structural coverage of protein-sequence space with high-accuracy models”,\nhttps://academic.oup.com/nar/article/50/D1/D439/6430488?login=false\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      “AlphaFold webpage(DeepMind)”, \nhttps://www.deepmind.com/research/highlighted-research/alphafold\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      “[Review] AlphaFold2”, https://ocxanc.tistory.com/51\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      “알파폴드2모델분석”, https://taehojo.github.io/alphafold/alphafold2.html\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      “Alphfafold2 논문리뷰1[성능]”, https://happyhaelee.tistory.com/m/96\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      “Alphfafold2 논문리뷰2[입력부분]”, https://happyhaelee.tistory.com/m/98\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      “Alphfafold2 논문리뷰4[Evoformer-pair representation]”, https://happyhaelee.tistory.com/m/99\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      “[초심자를 위한 생물학+정보학] 알파폴드의 설치와 사용: 깃, 도커, 그리고 엔비디아”,\nhttps://www.ibric.org/myboard/read.php?Board=news&id=337509 \n      </h1>\n\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}