{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/project/konfold_front/src/pages/Search.js\",\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n  const [proteinName, setProteinName] = useState(\"\"); // 저장 후 변수\n\n  const [button, setButton] = useState(true);\n  const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n  const url = \"/api/Input\";\n  const config = {\n    \"Content-Type\": 'application/json'\n  };\n  useEffect(() => {\n    // get api Implement\n    //const url = \"http://localhost:5000/api/Input\"\n    fetch(url).then(response => response.json()).then(json => {\n      console.log(\"jsonnnn\", json);\n    }).catch(e => {\n      console.log(\"e\", e);\n    });\n  }, []);\n  function changeButton() {\n    const UpperProtein = protein.toUpperCase();\n\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    UpperProtein.includes(\"B\") || UpperProtein.includes(\"J\") || UpperProtein.includes(\"O\") || UpperProtein.includes(\"X\") || UpperProtein.includes(\"Z\") || UpperProtein.includes(\" \") || !isAlpha(UpperProtein) ? setButton(true) : setButton(false);\n  }\n  const handleInput = event => {\n    event.preventDefault();\n    setProtein(event.target.value); //변수 저장 완료\n\n    // const UpperProtein = protein.toUpperCase();\n    // UpperProtein.includes('G' ||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n  };\n\n  const Perform = async event => {\n    _s();\n    //새로고침 막음\n    // 확인 후 다음 페이지\n    event.preventDefault();\n    setProteinName(protein);\n    let data = {\n      'proteinName': proteinName\n    };\n    const [yep, setYep] = useState(\"\");\n    setYep(\"얍\");\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      console.log(\"response\", data);\n      if (response.state == 200) {\n        console.log(\"포스트 성공\");\n      }\n    }).catch(e => {\n      console.log(\"포스트 실패\");\n    });\n    try {\n      const response = await fetch('http://localhost:5000/api/Input', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      console.log('result is: ', JSON.stringify(result, null, 4));\n    } catch (e) {\n      console.log(\"가져오기 실패\");\n    }\n\n    //window.location.href = \"/proteinInput\";\n\n    // axios.get('http://127.0.0.1:5000/api/Input',\n    //   {params: { \"proteinName\" : protein }\n    // }).then(function (response) {\n    //   console.log(protein);\n    //  }).catch(function (error){\n    //   console.log(error);\n    //  })\n\n    // axios.post(url, data, config)\n    // .then(res => {\n    //   console.log(\"포스트 완료\");\n    // } ).catch(err => {\n    //   console.log(\"포스트 안됨\");\n    // });\n\n    //console.log(protein);\n\n    //api post\n\n    localStorage.setItem(\"얍이름\", yep);\n    //localstorage 업로드\n  };\n  _s(Perform, \"uAdped3mxgCmrKt1JeUDLgvgJLg=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleprotein\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputTitle\",\n        children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: protein //input으로 받은 프로틴 시퀀스\n          ,\n          onChange: handleInput,\n          onKeyUp: changeButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: \"\\uC62C\\uBC14\\uB978 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: button,\n        onClick: Perform,\n        className: \"bottomButton\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputTitle\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 3D \\uAD6C\\uC870 \\uC2DC\\uAC01\\uD654 \\uD654\\uBA74\\uC785\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s2(Search, \"bXd7t5Y0nGjDLeSQwC0uk460kLg=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","axios","Link","useEffect","useState","jsxDEV","_jsxDEV","Search","_s2","_s","$RefreshSig$","protein","setProtein","proteinName","setProteinName","button","setButton","isAlpha","str","test","url","config","fetch","then","response","json","console","log","catch","e","changeButton","UpperProtein","toUpperCase","includes","handleInput","event","preventDefault","target","value","Perform","data","yep","setYep","method","headers","body","JSON","stringify","state","result","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onKeyUp","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/project/konfold_front/src/pages/Search.js"],"sourcesContent":["import React from \"react\";\nimport axios from 'axios'  ;\nimport { Link } from \"react-router-dom\"; \nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\n\n\nexport default function Search(){\n    \n  const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n  const [proteinName, setProteinName] = useState(\"\"); // 저장 후 변수\n\n  const [button, setButton] = useState(true);\n  const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n    \n  const url = \"/api/Input\";\n  const config = {\"Content-Type\": 'application/json'};\n  \n\n\n  useEffect (() =>{\n    // get api Implement\n    //const url = \"http://localhost:5000/api/Input\"\n    fetch(url).then (response => response. json ()) . then (json => {\n    console.log(\"jsonnnn\", json)\n    }).catch(e => {\n    console.log(\"e\", e)\n  })\n},[])\n\n  function changeButton(){\n    const UpperProtein = protein.toUpperCase();\n   \n   // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    (UpperProtein.includes(\"B\") || UpperProtein.includes(\"J\") || UpperProtein.includes(\"O\") || UpperProtein.includes(\"X\") || UpperProtein.includes(\"Z\") || UpperProtein.includes(\" \") || (!isAlpha(UpperProtein))) ? setButton(true) : setButton(false)\n\n   }\n\n\n  const handleInput = (event) => {\n    event.preventDefault();\n    setProtein(event.target.value); //변수 저장 완료\n    \n    // const UpperProtein = protein.toUpperCase();\n    // UpperProtein.includes('G' ||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n  };\n  \n  \n   const Perform = async (event) => {\n    //새로고침 막음\n    // 확인 후 다음 페이지\n    event.preventDefault();\n    setProteinName(protein);\n    let data = {\n      'proteinName' : proteinName\n  };\n  const [yep, setYep] = useState(\"\");\n  setYep(\"얍\");\n   \n\n  fetch(url,{\n    method:'POST',\n    headers:{\n            'Content-Type' : 'application/json'\n          },\n          body: JSON.stringify(data)\n        })\n        .then(response => {\n          console.log(\"response\", data)\n          if(response.state == 200){\n            console.log(\"포스트 성공\")\n          }\n        }).catch(e => {\n          console.log(\"포스트 실패\")\n        })\n  \n   \n     try {\n      const response = await fetch('http://localhost:5000/api/Input',{\n        method: 'POST',\n        headers:{\n          'Content-Type' : 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify(data)\n      });\n\n      const result = await response.json();\n    console.log('result is: ', JSON.stringify(result, null, 4));\n\n     } catch(e) {\n      console.log(\"가져오기 실패\");\n     }\n    \n\n\n    //window.location.href = \"/proteinInput\";\n\n    // axios.get('http://127.0.0.1:5000/api/Input',\n    //   {params: { \"proteinName\" : protein }\n    // }).then(function (response) {\n    //   console.log(protein);\n    //  }).catch(function (error){\n    //   console.log(error);\n    //  })\n\n\n    \n    // axios.post(url, data, config)\n    // .then(res => {\n    //   console.log(\"포스트 완료\");\n    // } ).catch(err => {\n    //   console.log(\"포스트 안됨\");\n    // });\n    \n     \n     \n    \n    //console.log(protein);\n\n    \n    //api post\n      \n    localStorage.setItem(\"얍이름\", yep);\n    //localstorage 업로드\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"titleprotein\">단백질 시퀀스를 입력해 주세요</div>\n\n      <div className=\"contentWrap\">\n        <div className=\"inputTitle\">단백질 시퀀스</div>\n        <div className=\"inputWrap\">\n          <input\n            className=\"input\"\n            value={protein} //input으로 받은 프로틴 시퀀스\n            onChange={handleInput}\n            onKeyUp={changeButton}\n            \n          />\n\n          {/* place holder 넣어 보기 */}\n        </div>\n\n        <div className=\"errorMessageWrap\">올바른 시퀀스를 입력해 주세요</div>\n      </div>\n      <div>\n        <button \n        disabled={button} \n        onClick={Perform} \n        className=\"bottomButton\">\n          확인\n        </button>\n      </div>\n      <div className=\"inputTitle\"> \n        단백질 3D 구조 시각화 화면입니다\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}